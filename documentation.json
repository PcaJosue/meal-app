{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "MealService",
            "id": "injectable-MealService-72c920f2156cbca3634ed822ae917814",
            "file": "src/app/services/meal.service.ts",
            "properties": [
                {
                    "name": "API",
                    "defaultValue": "'https://www.themealdb.com/api/json/v1/1'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "searchAreas",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "searchByArea",
                    "args": [
                        {
                            "name": "area",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "area",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchByCategory",
                    "args": [
                        {
                            "name": "category",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchById",
                    "args": [
                        {
                            "name": "id",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchByMainIngredient",
                    "args": [
                        {
                            "name": "ingredient",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "jsdoctags": [
                        {
                            "name": "ingredient",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchByName",
                    "args": [
                        {
                            "name": "name",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchCategories",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34
                },
                {
                    "name": "searchIngredients",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42
                }
            ],
            "description": "",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealService {\n\n\n  API = 'https://www.themealdb.com/api/json/v1/1';\n  constructor(private http: HttpClient) { }\n\n\n  searchByName(name) {\n    return this.http.get(`${this.API}/search.php?s=${name}`)\n  }\n\n  searchById(id) {\n    return this.http.get(`${this.API}/lookup.php?i=${id}`)\n  }\n\n  searchByCategory(category) {\n    return this.http.get(`${this.API}/filter.php?c=${category}`)\n  }\n\n  searchByArea(area) {\n    return this.http.get(`${this.API}/filter.php?a=${area}`)\n  }\n\n  searchByMainIngredient(ingredient) {\n    return this.http.get(`${this.API}/filter.php?i=${ingredient}`)\n  }\n\n  searchCategories() {\n    return this.http.get(`${this.API}/list.php?c=list`)\n  }\n\n  searchAreas() {\n    return this.http.get(`${this.API}/list.php?a=list`)\n  }\n\n  searchIngredients() {\n    return this.http.get(`${this.API}/list.php?i=list`)\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "Meal",
            "id": "class-Meal-8da7b60bef2f2d96836a67e936aa796d",
            "file": "src/app/model/meal.model.ts",
            "type": "class",
            "sourceCode": "export class MealStateModel {\r\n\r\n    title: string;\r\n    catalog: any;\r\n    options: string[];\r\n\r\n}\r\n\r\nexport class Meal {\r\n    idMeal: string;\r\n    strMeal: string;\r\n    strMealThumb: string;\r\n}\r\nexport enum OptionType {\r\n    'category' = 'category',\r\n    'area' = 'area',\r\n    'ingredient' = 'ingredient',\r\n    'name' = 'name'\r\n}\r\n\r\n\r\nexport const images = {\r\n    'Beef': 'Beef.jpeg',\r\n    'Breakfast': 'Breakfast.jpg',\r\n    'Chicken': 'Chicken.jfif',\r\n    'Dessert': 'Dessert.jfif',\r\n    \"Goat\": 'Goat.jpeg',\r\n    \"Lamb\": 'Lamb.jfif',\r\n    \"Miscellaneous\": 'Miscellaneous.jpg',\r\n    'Pasta': 'Pasta.jfif',\r\n    'Pork': 'Pork.jpg',\r\n    'Seafood': 'Seafood.jpg',\r\n    'Side': 'Side.jpg',\r\n    'Starter': 'Starter.jfif',\r\n    'Vegan': 'Vegan.jfif',\r\n    'Vegetarian': 'Vegetarian.jfif'\r\n}",
            "properties": [
                {
                    "name": "idMeal",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "strMeal",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "strMealThumb",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MealState",
            "id": "class-MealState-39fac6e6cf939ec56b954d1e27e0c0c3",
            "file": "src/app/state/meal.state.ts",
            "type": "class",
            "sourceCode": "import { Selector, State } from \"@ngxs/store\";\r\nimport { MealStateModel } from \"../model/meal.model\";\r\n\r\n\r\n@State<MealStateModel>({\r\n    name: 'meals',\r\n    defaults: {\r\n        title: 'Meal App',\r\n        catalog: null,\r\n        options: []\r\n    }\r\n})\r\nexport class MealState {\r\n    @Selector()\r\n    static title(state: MealStateModel) {\r\n        return state.title;\r\n    }\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "title",
                    "args": [
                        {
                            "name": "state",
                            "type": "MealStateModel"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "decorators": [
                        {
                            "name": "Selector",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "MealStateModel",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": []
        },
        {
            "name": "MealStateModel",
            "id": "class-MealStateModel-8da7b60bef2f2d96836a67e936aa796d",
            "file": "src/app/model/meal.model.ts",
            "type": "class",
            "sourceCode": "export class MealStateModel {\r\n\r\n    title: string;\r\n    catalog: any;\r\n    options: string[];\r\n\r\n}\r\n\r\nexport class Meal {\r\n    idMeal: string;\r\n    strMeal: string;\r\n    strMealThumb: string;\r\n}\r\nexport enum OptionType {\r\n    'category' = 'category',\r\n    'area' = 'area',\r\n    'ingredient' = 'ingredient',\r\n    'name' = 'name'\r\n}\r\n\r\n\r\nexport const images = {\r\n    'Beef': 'Beef.jpeg',\r\n    'Breakfast': 'Breakfast.jpg',\r\n    'Chicken': 'Chicken.jfif',\r\n    'Dessert': 'Dessert.jfif',\r\n    \"Goat\": 'Goat.jpeg',\r\n    \"Lamb\": 'Lamb.jfif',\r\n    \"Miscellaneous\": 'Miscellaneous.jpg',\r\n    'Pasta': 'Pasta.jfif',\r\n    'Pork': 'Pork.jpg',\r\n    'Seafood': 'Seafood.jpg',\r\n    'Side': 'Side.jpg',\r\n    'Starter': 'Starter.jfif',\r\n    'Vegan': 'Vegan.jfif',\r\n    'Vegetarian': 'Vegetarian.jfif'\r\n}",
            "properties": [
                {
                    "name": "catalog",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "options",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-5cf6fbc9c33ee570b95b4b2355ab4602",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title$",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "Select",
                            "stringifiedArguments": "MealState.title"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { MealState } from './state/meal.state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  @Select(MealState.title) title$: Observable<string>;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header [title]='title$ | async'></app-header>\r\n<router-outlet></router-outlet>\r\n<footer class='title-font' style='text-align: center;font-size: 1.4rem;'>\r\n    Created by Josue Pacheco - Demo Project\r\n</footer>"
        },
        {
            "name": "AreasComponent",
            "id": "component-AreasComponent-c7a411d43bc78839b60498d66d0df7d7",
            "file": "src/app/components/areas/areas.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-areas",
            "styleUrls": [
                "./areas.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./areas.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "type": "Meal[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "seeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { images, Meal, OptionType } from 'src/app/model/meal.model';\nimport { MealService } from 'src/app/services/meal.service';\n\n@Component({\n  selector: 'app-areas',\n  templateUrl: './areas.component.html',\n  styleUrls: ['./areas.component.scss']\n})\nexport class AreasComponent implements OnInit {\n\n  items: Meal[];\n  constructor(private mealService: MealService, private router: Router) { }\n  ngOnInit(): void {\n    setTimeout(async () => {\n      this.items = (await this.mealService.searchAreas().toPromise<any>()).meals?.map(meal => (\n        {\n          idMeal: null,\n          strMeal: meal.strArea,\n          strMealThumb: images[meal.strArea]\n        }\n      ));\n    }, 100);\n  }\n\n  seeItem(item) {\n    this.router.navigate([`/items/${item.strMeal}/${OptionType.area}`])\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".areas {\r\n    &__list {\r\n        margin-top: 2rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        gap: 1rem;\r\n        justify-content: center;\r\n        &-item {\r\n            width: 23%;\r\n            text-align: center;\r\n\r\n            span {\r\n                font-family: \"Qwigley\";\r\n                font-size: 2.5rem;\r\n            }\r\n\r\n            &:hover {\r\n                cursor: pointer;\r\n                background-color: rgb(228, 228, 227);\r\n                transform: translateY(-3px);\r\n                box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n            }\r\n\r\n            @media (max-width: 500px) {\r\n                width: 48%;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./areas.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "mealService",
                        "type": "MealService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "mealService",
                        "type": "MealService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class='areas__container'>\n    <app-search></app-search>\n    <div class='areas__list'>\n        <div (click)='seeItem(item)' class='areas__list-item' *ngFor='let item of items'>\n            <span>{{item.strMeal}}</span>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "CatalogComponent",
            "id": "component-CatalogComponent-d6a35aef7a790666578332fad2eab2f5",
            "file": "src/app/components/catalog/catalog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-catalog",
            "styleUrls": [
                "./catalog.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./catalog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "type": "Meal[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                },
                {
                    "name": "seeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { images, Meal, OptionType } from 'src/app/model/meal.model';\nimport { MealService } from 'src/app/services/meal.service';\n\n@Component({\n  selector: 'app-catalog',\n  templateUrl: './catalog.component.html',\n  styleUrls: ['./catalog.component.scss']\n})\nexport class CatalogComponent implements OnInit {\n\n  items: Meal[];\n  constructor(private mealService: MealService, private router: Router) { }\n  ngOnInit(): void {\n    setTimeout(async () => {\n      this.items = (await this.mealService.searchCategories().toPromise<any>()).meals?.map(meal => (\n        {\n          idMeal: null,\n          strMeal: meal.strCategory,\n          strMealThumb: images[meal.strCategory]\n        }\n      ));\n    }, 100);\n  }\n\n  seeItem(item) {\n    this.router.navigate([`/items/${item.strMeal}/${OptionType.category}`])\n  }\n\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".catalog {\r\n    &__1 {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        gap: 0.5rem;\r\n        justify-content: center;\r\n        &-item {\r\n            display: flex;\r\n\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            width: 30%;\r\n\r\n            img {\r\n                width: 85%;\r\n                height: 85%;\r\n            }\r\n            span {\r\n                font-family: \"Qwigley\";\r\n                font-size: 2rem;\r\n                font-weight: bold;\r\n            }\r\n\r\n            &:hover {\r\n                cursor: pointer;\r\n                background-color: rgb(228, 228, 227);\r\n                transform: translateY(-3px);\r\n                box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n            }\r\n\r\n            @media (max-width: 500px) {\r\n                width: 48%;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./catalog.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "mealService",
                        "type": "MealService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "mealService",
                        "type": "MealService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class='catalog__container'>\r\n    <app-search></app-search>\r\n    <div class='catalog__1'>\r\n        <div (click)='seeItem(item)' class='catalog__1-item' *ngFor='let item of items'>\r\n            <img [src]='\"../assets/img/\"+item.strMealThumb'>\r\n            <span>{{item.strMeal}}</span>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-2cb7be8a7cfc6712a1350f1fb07e3655",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "'Meal App'",
                    "line": 12
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n\n\n  @Input() title = 'Meal App';\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\r\n    background-color: black;\r\n    color: white;\r\n    text-align: center;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    &__logo {\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 1rem;\r\n        font-size: 2rem;\r\n        cursor: pointer;\r\n    }\r\n\r\n    &__title {\r\n        width: 100%;\r\n    }\r\n\r\n    &__menu {\r\n        position: absolute;\r\n        right: 1rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        gap: 1rem;\r\n        font-size: 2.5rem;\r\n        span {\r\n            cursor: pointer;\r\n            &:hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n\r\n        @media (max-width: 999px) {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    &__icon {\r\n        position: absolute;\r\n        top: 25%;\r\n        right: 1rem;\r\n        font-size: 2rem;\r\n        cursor: pointer;\r\n\r\n        @media (min-width: 1000px) {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    &__mobile {\r\n        &-button {\r\n            font-family: \"Qwigley\";\r\n            font-size: 2rem;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class='header title-font'>\n    <mat-icon routerLink=\"/home\" class='header__logo'>menu_book</mat-icon>\n    <span class='header__title'>{{title}}</span>\n    <div class=\"header__menu\">\n        <span routerLink='/categories ' routerLinkActive=\"active\">Categories</span>\n        <span routerLink='/areas' routerLinkActive=\"active\">Areas</span>\n    </div>\n    <mat-icon class='header__icon' mat-button [matMenuTriggerFor]=\"menu\">menu</mat-icon>\n    <mat-menu class='header__mobile' #menu=\"matMenu\">\n        <button class='header__mobile-button' routerLink='/categories' mat-menu-item>categories</button>\n        <button class='header__mobile-button' routerLink='/areas' mat-menu-item>areas</button>\n    </mat-menu>\n</div>"
        },
        {
            "name": "ItemComponent",
            "id": "component-ItemComponent-d82b86f3f8e6521b6e104640f4099f0a",
            "file": "src/app/components/item/item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item",
            "styleUrls": [
                "./item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "ingredients",
                    "defaultValue": "[]",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "item",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MealService } from 'src/app/services/meal.service';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent implements OnInit {\n\n  item: any;\n  ingredients: any = [];\n  id: string;\n  constructor(private mealService: MealService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // this.id = this.route.snapshot.params.id;\n    // setTimeout(async () => {\n    //   this.item = (await this.mealService.searchById(this.id).toPromise<any>()).meals[0];\n    //   let i = 1;\n    //   while (this.item[`strIngredient${i}`]) {\n    //     this.ingredients.push({ ingredient: this.item[`strIngredient${i}`], measure: this.item[`strMeasure${i}`] })\n    //     i++;\n    //   }\n    // }, 100);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item {\r\n    &__container {\r\n        padding: 2rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        gap: 2rem;\r\n    }\r\n\r\n    &__left {\r\n        width: 30%;\r\n        img {\r\n            width: 100%;\r\n        }\r\n        &-tags {\r\n            margin-top: 1.5rem;\r\n            display: flex;\r\n            flex-direction: row;\r\n            gap: 5px;\r\n            flex-wrap: wrap;\r\n            span {\r\n                background-color: rgb(15, 15, 15);\r\n                color: rgb(235, 233, 233);\r\n                border-radius: 15%;\r\n                font-size: 1rem;\r\n                padding: 0.5rem;\r\n                font-size: 14px;\r\n            }\r\n        }\r\n    }\r\n\r\n    &__right {\r\n        width: 70%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 1.5rem;\r\n\r\n        &-info {\r\n            width: 50%;\r\n            display: flex;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            strong {\r\n                font-weight: bold;\r\n            }\r\n            &-1 {\r\n                display: flex;\r\n                gap: 10px;\r\n                justify-content: center;\r\n                align-items: center;\r\n            }\r\n        }\r\n\r\n        &-instructions {\r\n            display: flex;\r\n            justify-content: start;\r\n            align-items: flex-start;\r\n            width: 70%;\r\n            gap: 2rem;\r\n            strong {\r\n                font-weight: bold;\r\n                width: 30%;\r\n            }\r\n        }\r\n\r\n        &-ingredients {\r\n            width: 80%;\r\n            align-self: center;\r\n            &-header {\r\n                background-color: rgb(8, 8, 8);\r\n                color: whitesmoke;\r\n                text-align: center;\r\n                padding: 0.5rem;\r\n                font-family: \"Qwigley\";\r\n                font-size: 2rem;\r\n            }\r\n            &-content {\r\n                display: flex;\r\n                flex-direction: column;\r\n                &-ingredient {\r\n                    height: 2rem;\r\n                    display: flex;\r\n                    justify-content: space-around;\r\n                    &:nth-child(odd) {\r\n                        background-color: rgb(197, 195, 195);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "mealService",
                        "type": "MealService"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "mealService",
                        "type": "MealService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class='item__container'>\n\n    <div class='item__left'>\n        <img [src]='item.strMealThumb'>\n        <div class='item__left-tags'>\n            <span *ngFor='let tag of item.strTags.split(\",\")'>{{tag}}</span>\n        </div>\n\n    </div>\n    <div class='item__right'>\n        <div class='item__right-info'>\n            <div class=\"item__right-info-1\">\n                <strong>Category:</strong>\n                <span>{{item.strCategory}}</span>\n            </div>\n            <div class=\"item__right-info-1\">\n                <strong>Area:</strong>\n                <span>{{item.strArea}}</span>\n            </div>\n        </div>\n        <div class=\"item__right-instructions\">\n            <strong>Instructions:</strong>\n            <div class='item__right-instructions-text'>\n                {{item.strInstructions}}\n            </div>\n        </div>\n        <div class='item__right-ingredients'>\n            <div class=\"item__right-ingredients-header\">\n                Ingredients\n            </div>\n            <div class=\"item__right-ingredients-content\">\n                <div class=\"item__right-ingredients-content-ingredient\" *ngFor='let ing of ingredients'>\n                    <span>{{ing.ingredient}}</span>\n                    <span>{{ing.measure}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>"
        },
        {
            "name": "MealsComponent",
            "id": "component-MealsComponent-c810ecc9ac621155eb7ca1978f21773a",
            "file": "src/app/components/meals/meals.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-meals",
            "styleUrls": [
                "./meals.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./meals.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "seeItem",
                    "args": [
                        {
                            "name": "item",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { images, Meal, OptionType } from 'src/app/model/meal.model';\nimport { MealService } from 'src/app/services/meal.service';\n\n@Component({\n  selector: 'app-meals',\n  templateUrl: './meals.component.html',\n  styleUrls: ['./meals.component.scss']\n})\nexport class MealsComponent implements OnInit {\n\n  items: any;\n  type: string;\n  value: string;\n  constructor(private mealService: MealService, private router: Router, private route: ActivatedRoute) { }\n  ngOnInit(): void {\n\n    this.type = this.route.snapshot.params.type;\n    this.value = this.route.snapshot.params.value;\n\n    setTimeout(async () => {\n\n      if (this.type === OptionType.category)\n        this.items = (await this.mealService.searchByCategory(this.value).toPromise<any>()).meals;\n      else if (this.type === OptionType.area)\n        this.items = (await this.mealService.searchByArea(this.value).toPromise<any>()).meals;\n      else if (this.type === OptionType.name)\n        this.items = (await this.mealService.searchByName(this.value).toPromise<any>()).meals;\n\n      console.log('items', this.items);\n    }, 100);\n  }\n\n  seeItem(item) {\n    this.router.navigate([`/item/${item.strMeal}`])\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".meals {\r\n    &__list {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        gap: 0.5rem;\r\n        justify-content: center;\r\n        &-item {\r\n            display: flex;\r\n\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            align-items: center;\r\n            width: 30%;\r\n\r\n            img {\r\n                width: 85%;\r\n                height: 85%;\r\n            }\r\n            span {\r\n                font-family: \"Qwigley\";\r\n                font-size: 2rem;\r\n                font-weight: bold;\r\n            }\r\n\r\n            &:hover {\r\n                cursor: pointer;\r\n                background-color: rgb(228, 228, 227);\r\n                transform: translateY(-3px);\r\n                box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\r\n            }\r\n\r\n            @media (max-width: 500px) {\r\n                width: 48%;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./meals.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "mealService",
                        "type": "MealService"
                    },
                    {
                        "name": "router",
                        "type": "Router"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "mealService",
                        "type": "MealService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class='meals__container'>\n    <app-search></app-search>\n    <div class='meals__list'>\n        <div (click)='seeItem(item)' class='meals__list-item' *ngFor='let item of items'>\n            <img [src]='item.strMealThumb'>\n            <span>{{item.strMeal}}</span>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-ab9ed6f14f0f178d6f74ba1535565bbd",
            "file": "src/app/components/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "myControl",
                    "defaultValue": "new FormControl('')",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18
                },
                {
                    "name": "search",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  myControl = new FormControl('');\n  filteredOptions: Observable<string[]>;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void { }\n\n  search() {\n    this.router.navigate(['/items', this.myControl.value]);\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 3px;\r\n    &__input {\r\n        width: 250px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class='search'>\n    <mat-form-field class=\"search__input\" appearance=\"legacy\">\n        <input type=\"text\" placeholder='Search meal by name ' aria-label=\"Number\" matInput [formControl]=\"myControl\">\n    </mat-form-field>\n    <button class=\"search__button\" (click)='search()' mat-raised-button color=\"primary\">Search</button>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "MealService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "AreasComponent"
                        },
                        {
                            "name": "CatalogComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "ItemComponent"
                        },
                        {
                            "name": "MealsComponent"
                        },
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Beef",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "components",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "type": "[]",
                "defaultValue": "[\n  AppComponent,\n  CatalogComponent,\n  HeaderComponent,\n  SearchComponent,\n  AreasComponent,\n  MealsComponent,\n  ItemComponent\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "images",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/model/meal.model.ts",
                "type": "object",
                "defaultValue": "{\r\n    'Beef': 'Beef.jpeg',\r\n    'Breakfast': 'Breakfast.jpg',\r\n    'Chicken': 'Chicken.jfif',\r\n    'Dessert': 'Dessert.jfif',\r\n    \"Goat\": 'Goat.jpeg',\r\n    \"Lamb\": 'Lamb.jfif',\r\n    \"Miscellaneous\": 'Miscellaneous.jpg',\r\n    'Pasta': 'Pasta.jfif',\r\n    'Pork': 'Pork.jpg',\r\n    'Seafood': 'Seafood.jpg',\r\n    'Side': 'Side.jpg',\r\n    'Starter': 'Starter.jfif',\r\n    'Vegan': 'Vegan.jfif',\r\n    'Vegetarian': 'Vegetarian.jfif'\r\n}"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/catalog/catalog.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/areas/areas.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/item/item.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/meals/meals.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Main",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/search/search.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "mock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/jest-config/__mocks__/globalMocks.ts",
                "type": "",
                "defaultValue": "() => {\n    let storage = {};\n    return {\n      getItem: key => (key in storage ? storage[key] : null),\n      setItem: (key, value) => (storage[key] = value || ''),\n      removeItem: key => delete storage[key],\n      clear: () => (storage = {}),\n    };\n  }"
            },
            {
                "name": "Spicy",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/catalog/catalog.stories.ts",
                "type": "Story<CatalogComponent>",
                "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/areas/areas.stories.ts",
                "type": "Story<AreasComponent>",
                "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/item/item.stories.ts",
                "type": "Story<ItemComponent>",
                "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/meals/meals.stories.ts",
                "type": "Story<MealsComponent>",
                "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/header/header.stories.ts",
                "type": "Story<HeaderComponent>",
                "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/search/search.stories.ts",
                "type": "Story<SearchComponent>",
                "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "OptionType",
                "childs": [
                    {
                        "name": "category",
                        "value": "category"
                    },
                    {
                        "name": "area",
                        "value": "area"
                    },
                    {
                        "name": "ingredient",
                        "value": "ingredient"
                    },
                    {
                        "name": "name",
                        "value": "name"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/model/meal.model.ts"
            }
        ],
        "groupedVariables": {
            "src/app/components/header/header.stories.ts": [
                {
                    "name": "Beef",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Spicy",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/header/header.stories.ts",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "components",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  AppComponent,\n  CatalogComponent,\n  HeaderComponent,\n  SearchComponent,\n  AreasComponent,\n  MealsComponent,\n  ItemComponent\n]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/model/meal.model.ts": [
                {
                    "name": "images",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/model/meal.model.ts",
                    "type": "object",
                    "defaultValue": "{\r\n    'Beef': 'Beef.jpeg',\r\n    'Breakfast': 'Breakfast.jpg',\r\n    'Chicken': 'Chicken.jfif',\r\n    'Dessert': 'Dessert.jfif',\r\n    \"Goat\": 'Goat.jpeg',\r\n    \"Lamb\": 'Lamb.jfif',\r\n    \"Miscellaneous\": 'Miscellaneous.jpg',\r\n    'Pasta': 'Pasta.jfif',\r\n    'Pork': 'Pork.jpg',\r\n    'Seafood': 'Seafood.jpg',\r\n    'Side': 'Side.jpg',\r\n    'Starter': 'Starter.jfif',\r\n    'Vegan': 'Vegan.jfif',\r\n    'Vegetarian': 'Vegetarian.jfif'\r\n}"
                }
            ],
            "src/app/components/catalog/catalog.stories.ts": [
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/catalog/catalog.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/catalog/catalog.stories.ts",
                    "type": "Story<CatalogComponent>",
                    "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
                }
            ],
            "src/app/components/areas/areas.stories.ts": [
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/areas/areas.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/areas/areas.stories.ts",
                    "type": "Story<AreasComponent>",
                    "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
                }
            ],
            "src/app/components/item/item.stories.ts": [
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/item/item.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/item/item.stories.ts",
                    "type": "Story<ItemComponent>",
                    "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
                }
            ],
            "src/app/components/meals/meals.stories.ts": [
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/meals/meals.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/meals/meals.stories.ts",
                    "type": "Story<MealsComponent>",
                    "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
                }
            ],
            "src/app/components/search/search.stories.ts": [
                {
                    "name": "Main",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/search/search.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/search/search.stories.ts",
                    "type": "Story<SearchComponent>",
                    "defaultValue": "args => ({\r\n    props: { ...args }\r\n})"
                }
            ],
            "src/jest-config/__mocks__/globalMocks.ts": [
                {
                    "name": "mock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/jest-config/__mocks__/globalMocks.ts",
                    "type": "",
                    "defaultValue": "() => {\n    let storage = {};\n    return {\n      getItem: key => (key in storage ? storage[key] : null),\n      setItem: (key, value) => (storage[key] = value || ''),\n      removeItem: key => delete storage[key],\n      clear: () => (storage = {}),\n    };\n  }"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/model/meal.model.ts": [
                {
                    "name": "OptionType",
                    "childs": [
                        {
                            "name": "category",
                            "value": "category"
                        },
                        {
                            "name": "area",
                            "value": "area"
                        },
                        {
                            "name": "ingredient",
                            "value": "ingredient"
                        },
                        {
                            "name": "name",
                            "value": "name"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/model/meal.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app.routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "categories",
                        "component": "CatalogComponent"
                    },
                    {
                        "path": "areas",
                        "component": "AreasComponent"
                    },
                    {
                        "path": "items/:value/:type",
                        "component": "MealsComponent"
                    },
                    {
                        "path": "item/:id",
                        "component": "ItemComponent"
                    },
                    {
                        "path": "",
                        "redirectTo": "categories",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "components",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/areas/areas.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreasComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/areas/areas.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/areas/areas.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/catalog/catalog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CatalogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/catalog/catalog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/catalog/catalog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Beef",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Spicy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item/item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item/item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item/item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/meals/meals.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MealsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/meals/meals.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/meals/meals.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Main",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/model/meal.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Meal",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/model/meal.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MealStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/model/meal.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "images",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/meal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MealService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/state/meal.state.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MealState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/jest-config/__mocks__/globalMocks.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}